关于手写动态代理的几点说明：

1.我们主体是模仿JDK动态代理来完成的。

2.但是我们不会使用JDK动态代理或者其它动态代理提供的任何组件。

3.手写Proxy工具类（JDK动态代理中使用Proxy.newProxyInstance(..)方法来完成对代理对象的创建)

4.我们都知道JDK的动态代理需要三个参数
  1>classLoader
  2>目标类所实现的接口
  3>InvocationHandler实现类

5.自定义类加载器。

6.接口们可以直接从传入对象的类对象获取,所以和以前一样。

7.需要自己手写实现InvocationHandler的实现类。

8.我们模仿JDK动态代理生成的代理对象的源码，手写我们的动态代理生成的对象。

9.将我们生成的代理类手动的装载到JVM中执行。

10.在特定的时刻手动删除生成的代理类的文件和代理类被Javac编译后生成的.class文件。